{"version":3,"sources":["components/Form.js","components/Results.jsx","components/Header.js","components/History.jsx","components/Condition.jsx","components/App.jsx","index.js"],"names":["Form","handleSubmit","handleChange","handleClick","url","handleGo","onSubmit","type","onChange","value","onClick","Results","count","body","headers","name","src","Count","Header","props","className","to","activeClassName","History","history","map","index","key","render","condition","children","If","React","Children","child","cloneElement","Then","Else","axios","require","App","e","target","setState","method","state","loading","reverse","preventDefault","then","response","error","data","Headers","Data","catch","console","log","this","Fragment","exact","path","Object","keys","length","alt","width","height","Component","Main","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fe2864cd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Form = ({ handleSubmit, handleChange, handleClick, url, handleGo }) => {\n  return (\n    <form onSubmit={handleSubmit} >\n      <input type=\"text\" onChange={handleChange} value={url} />\n      <button value=\"get\" onClick={handleClick} >GET</button>\n      <button value=\"post\" onClick={handleClick} >POST</button>\n      <button value=\"put\" onClick={handleClick} >PUT</button>\n      <button value=\"patch\" onClick={handleClick} >PATCH</button>\n      <button value=\"delete\" onClick={handleClick} >DELETE</button>\n      <input type=\"submit\" onClick={handleGo} value=\"Go!\" />\n    </form>\n  )\n}\n\nexport default Form;","import React from 'react';\nimport ReactJson from 'react-json-view';\n\nconst Results = ({ count, body, headers }) => {\n  return (\n    <div>\n      <ReactJson name={false} src={{ Count: count }} />\n      <ReactJson name={false} src={headers} />\n      <ReactJson name={false} src={body} />\n    </div>\n  );\n};\n\nexport default Results;\n","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nconst Header = props => {\n  return (\n    <header>\n      <div>Sample API: <br />\n        https://pokeapi.co/api/v2/pokemon<br />\n        https://pokeapi.co/api/v2/pokemon/ditto<br />\n        Copy one of sample api into input field, then click on Go! button to test app\n      </div>\n      <h1 className=\"header\">RESTy - Lab 29</h1>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <NavLink activeClassName=\"active\" to=\"/history\">History</NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst History = ({ history }) => {\n  return (\n    <div>\n      {history.map((url, index) => {\n        return (\n          <li key={index}>\n            {url}\n            <Link to=\"/\">\n              <button>Go!</button>\n            </Link>\n          </li>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default History;\n","import React from 'react';\n\nconst render = (condition = false, children = null) => {\n  return condition ? children : null;\n};\n\nexport const If = (props) =>\n  React.Children.map(props.children, (child) =>\n    React.cloneElement(child, { condition: props.condition })\n  );\n\nexport const Then = (props) => render(props.condition, props.children);\nexport const Else = (props) => render(!props.condition, props.children);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Form from './Form.js';\nimport Results from './Results.jsx';\nimport Header from './Header.js';\nimport History from './History.jsx';\nimport { If, Then, Else } from './Condition.jsx';\nconst axios = require('axios');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      method: 'get',\n      url: '',\n      count: 0,\n      body: {},\n      headers: {},\n      history: [],\n      loading: false,\n    };\n  }\n\n  // add some functions\n  handleChange = (e) => {\n    const url = e.target.value;\n    this.setState({ url });\n  };\n\n  handleClick = (e) => {\n    const method = e.target.value;\n    this.setState({ method });\n  };\n\n  handleGo = (e) => {\n    const { history, url, loading } = this.state;\n    this.setState({\n      loading: !loading,\n      history: [...history, url].reverse(),\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    axios({\n      method: this.state.method,\n      url: this.state.url,\n    })\n      .then((response) => {\n        this.setState({\n          error: '',\n          count: response.data.count,\n          headers: { Headers: response.headers },\n          body: { Data: response.data },\n          loading: false,\n          url: '',\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        // this.setState({ error: error, url: '', loading: false });\n      });\n  };\n\n  render() {\n    const { url, count, headers, body, history, loading } = this.state;\n    return (\n      <React.Fragment>\n        <Header />\n        <Route exact path=\"/\">\n          <Form\n            url={url}\n            handleSubmit={this.handleSubmit}\n            handleChange={this.handleChange}\n            handleClick={this.handleClick}\n            handleGo={this.handleGo}\n          />\n          <If condition={!loading}>\n            <Then>\n              <If condition={Object.keys(body).length !== 0}>\n                <Then>\n                  <Results count={count} headers={headers} body={body} />\n                </Then>\n              </If>\n            </Then>\n            <Else>\n              <img\n                src=\"https://media.giphy.com/media/y1ZBcOGOOtlpC/giphy.gif\"\n                alt=\"loading\"\n                width=\"300px\"\n                height=\"300px\"\n              />\n            </Else>\n          </If>\n        </Route>\n        <Route exact path=\"/history\">\n          <History history={history} />\n        </Route>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App.jsx';\n\nconst Main = () => {\n  return (\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  )\n}\n\nReactDOM.render(<Main />, document.getElementById('root'));"],"sourceRoot":""}